name: Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Build Linux (arm64)
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y build-essential pkg-config libssl-dev clang cmake llvm g++-aarch64-linux-gnu gcc-aarch64-linux-gnu libc6-dev-i386 g++-13-multilib gcc-13-multilib && dpkg -l

      - name: Install protoc
        id: deps-protoc
        shell: bash
        run: |
          curl -Lo /tmp/protoc.zip \
          "https://github.com/protocolbuffers/protobuf/releases/download/v28.2/protoc-28.2-linux-x86_64.zip"
          unzip -o /tmp/protoc.zip -d ${HOME}/.local
          echo "PROTOC=${HOME}/.local/bin/protoc" >> $GITHUB_ENV
          export PATH="${PATH}:${HOME}/.local/bin"

      - name: Add Rust targets
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Create Cargo multiarch config
        run: |
          touch ~/.cargo/config.toml
          echo "
          [target.aarch64-unknown-linux-gnu]
          linker = \"aarch64-linux-gnu-gcc\"
          " > ~/.cargo/config.toml

      - name: Build for Linux arm64
        run: cargo build -r --target=aarch64-unknown-linux-gnu && mv target/aarch64-unknown-linux-gnu/release/platform-cli ./platform-cli-gnu-arm64